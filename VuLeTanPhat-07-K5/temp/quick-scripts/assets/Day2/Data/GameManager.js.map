{"version":3,"sources":["GameManager.js"],"names":["cc","Class","extends","Component","properties","playerHpLabel","Label","playerMpLabel","playerAtkLabel","playerDefLabel","enemyHpLabel","enemyMpLabel","enemyAtkLabel","enemyDefLabel","messageLabel","attackBtn","Button","skillBtn","recoverBtn","onLoad","player","health","attack","getRandom","defense","energy","enemy","gameOver","updateUI","node","on","onAttack","onSkill","onRecover","min","max","Math","floor","random","string","dealDamage","checkGameOver","enemyTurn","attacker","defender","isSkill","baseDamage","damage","scheduleOnce","action","isOver","disableButtons","interactable"],"mappings":"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","file":"GameManager.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Day2\\Data","sourcesContent":["cc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    // Player's properties\r\n    playerHpLabel: cc.Label,\r\n    playerMpLabel: cc.Label,\r\n    playerAtkLabel: cc.Label,\r\n    playerDefLabel: cc.Label,\r\n\r\n    // Enemy's properties\r\n    enemyHpLabel: cc.Label,\r\n    enemyMpLabel: cc.Label,\r\n    enemyAtkLabel: cc.Label,\r\n    enemyDefLabel: cc.Label,\r\n\r\n    // Message label\r\n    messageLabel: cc.Label,\r\n\r\n    // Buttons\r\n    attackBtn: cc.Button,\r\n    skillBtn: cc.Button,\r\n    recoverBtn: cc.Button,\r\n  },\r\n\r\n  onLoad() {\r\n    this.player = {\r\n      health: 100,\r\n      attack: this.getRandom(10, 20),\r\n      defense: this.getRandom(5, 15),\r\n      energy: 50,\r\n    };\r\n\r\n    this.enemy = {\r\n      health: 100,\r\n      attack: this.getRandom(10, 20),\r\n      defense: this.getRandom(5, 15),\r\n      energy: 50,\r\n    };\r\n\r\n    this.gameOver = false;\r\n\r\n    this.updateUI();\r\n    this.attackBtn.node.on(\"click\", this.onAttack, this);\r\n    this.skillBtn.node.on(\"click\", this.onSkill, this);\r\n    this.recoverBtn.node.on(\"click\", this.onRecover, this);\r\n  },\r\n\r\n  getRandom(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  },\r\n\r\n  updateUI() {\r\n    // Clamp HP to avoid negative numbers\r\n    this.player.health = Math.max(0, this.player.health);\r\n    this.enemy.health = Math.max(0, this.enemy.health);\r\n\r\n    this.playerHpLabel.string = `Player HP: ${this.player.health}`;\r\n    this.playerMpLabel.string = `Energy: ${this.player.energy}`;\r\n    this.playerAtkLabel.string = `Attack: ${this.player.attack}`;\r\n    this.playerDefLabel.string = `Defense: ${this.player.defense}`;\r\n\r\n    this.enemyHpLabel.string = `Enemy HP: ${this.enemy.health}`;\r\n    this.enemyMpLabel.string = `Energy: ${this.enemy.energy}`;\r\n    this.enemyAtkLabel.string = `Attack: ${this.enemy.attack}`;\r\n    this.enemyDefLabel.string = `Defense: ${this.enemy.defense}`;\r\n  },\r\n\r\n  onAttack() {\r\n    if (this.gameOver) return;\r\n    this.dealDamage(this.player, this.enemy, false);\r\n\r\n    if (this.checkGameOver()) return;\r\n    this.enemyTurn();\r\n  },\r\n\r\n  onSkill() {\r\n    if (this.gameOver) return;\r\n\r\n    if (this.player.energy >= 30) {\r\n      this.dealDamage(this.player, this.enemy, true);\r\n      this.player.energy -= 30;\r\n\r\n      if (this.checkGameOver()) return;\r\n      this.enemyTurn();\r\n    } else {\r\n      this.messageLabel.string = \"Not enough energy for skill!\";\r\n    }\r\n  },\r\n\r\n  onRecover() {\r\n    if (this.gameOver) return;\r\n\r\n    this.player.energy = Math.min(this.player.energy + 20, 100);\r\n    this.messageLabel.string = \"Player recovers 20 energy!\";\r\n    this.updateUI();\r\n    this.enemyTurn();\r\n  },\r\n\r\n  dealDamage(attacker, defender, isSkill) {\r\n    let baseDamage = attacker.attack - defender.defense;\r\n    baseDamage = Math.max(1, baseDamage);\r\n    let damage = isSkill ? baseDamage * 2 : baseDamage;\r\n    defender.health -= damage;\r\n\r\n    // Prevent negative health\r\n    defender.health = Math.max(0, defender.health);\r\n\r\n    this.messageLabel.string = `${\r\n      isSkill ? \"Skill\" : \"Attack\"\r\n    } dealt ${damage} damage`;\r\n    this.updateUI(); // Ensure UI reflects latest health\r\n  },\r\n\r\n  enemyTurn() {\r\n    if (this.gameOver) return;\r\n\r\n    this.scheduleOnce(() => {\r\n      if (this.gameOver) return;\r\n\r\n      let action = Math.random();\r\n\r\n      if (this.enemy.energy >= 30 && action < 0.3) {\r\n        this.dealDamage(this.enemy, this.player, true);\r\n        this.enemy.energy -= 30;\r\n      } else if (action < 0.6) {\r\n        this.dealDamage(this.enemy, this.player, false);\r\n      } else {\r\n        this.enemy.energy = Math.min(this.enemy.energy + 20, 100);\r\n        this.messageLabel.string = \"Enemy recovers 20 energy!\";\r\n      }\r\n\r\n      this.updateUI();\r\n      this.checkGameOver();\r\n    }, 0.5);\r\n  },\r\n\r\n  checkGameOver() {\r\n    let isOver = false;\r\n\r\n    if (this.player.health <= 0) {\r\n      this.player.health = 0;\r\n      this.messageLabel.string = \"Enemy Wins!\";\r\n      isOver = true;\r\n    }\r\n\r\n    if (this.enemy.health <= 0) {\r\n      this.enemy.health = 0;\r\n      this.messageLabel.string = \"Player Wins!\";\r\n      isOver = true;\r\n    }\r\n\r\n    if (isOver) {\r\n      this.gameOver = true;\r\n      this.disableButtons();\r\n      this.updateUI(); // Ensure final state is shown\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  },\r\n\r\n  disableButtons() {\r\n    this.attackBtn.interactable = false;\r\n    this.skillBtn.interactable = false;\r\n    this.recoverBtn.interactable = false;\r\n  },\r\n});\r\n"]}