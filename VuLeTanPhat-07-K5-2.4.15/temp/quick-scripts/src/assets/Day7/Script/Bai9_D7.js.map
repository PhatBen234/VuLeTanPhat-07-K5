{"version":3,"sources":["assets/Day7/Script/Bai9_D7.js"],"names":["cc","Class","Component","properties","outputLabel","Label","start","testCircuitBreaker","getServerTime","fetch","window","location","href","toString","method","response","dateHeader","headers","get","Error","Date","getTime","now","circuitBreaker","fn","timeThreshold","isOpen","setTimeout","getTimeLimited","result1","log","string","result2"],"mappings":";;;;;;+CACA;;;;;;AADAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACZC,WAAW,EAAEJ,EAAE,CAACK;EADJ,CAHP;EAOLC,KAPK,mBAOG;IACR,KAAKC,kBAAL;EACC,CATI;EAWCC,aAXD,2BAWiB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEKC,KAAK,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,EAAD,EAAkC;gBAAEC,MAAM,EAAE;cAAV,CAAlC,CAFV;;YAAA;cAEZC,QAFY;cAGZC,UAHY,GAGCD,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqB,MAArB,CAHD;;cAAA,IAIbF,UAJa;gBAAA;gBAAA;cAAA;;cAAA,MAIK,IAAIG,KAAJ,CAAU,gBAAV,CAJL;;YAAA;cAAA,iCAKX,IAAIC,IAAJ,CAASJ,UAAT,EAAqBK,OAArB,EALW;;YAAA;cAAA;cAAA;cAAA,iCAOXD,IAAI,CAACE,GAAL,EAPW;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EASrB,CApBI;EAsBCC,cAtBD,0BAsBgBC,EAtBhB,EAsBoBC,aAtBpB,EAsBmC;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cACpCC,MADoC,GAC3B,IAD2B;cAExCC,UAAU,CAAC,YAAM;gBACbD,MAAM,GAAG,KAAT;cACH,CAFS,EAEPD,aAFO,CAAV;cAFwC,0GAMjC;gBAAA;gBAAA;kBAAA;oBAAA;sBAAA;wBAAA,KACCC,MADD;0BAAA;0BAAA;wBAAA;;wBAAA;wBAAA,OAEUF,EAAE,MAAF,gBAFV;;sBAAA;wBAAA;;sBAAA;wBAAA,kCAII,gBAJJ;;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA;cAAA,CANiC;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAavC,CAnCI;EAqCCjB,kBArCD,gCAqCsB;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACE,KAAI,CAACgB,cAAL,CAAoB,KAAI,CAACf,aAAzB,EAAwC,IAAxC,CADF;;YAAA;cACrBoB,cADqB;cAG3BD,UAAU,0EAAC;gBAAA;gBAAA;kBAAA;oBAAA;sBAAA;wBAAA;wBAAA,OACeC,cAAc,EAD7B;;sBAAA;wBACDC,OADC;wBAEP7B,EAAE,CAAC8B,GAAH,CAAOD,OAAP;wBACA,KAAI,CAACzB,WAAL,CAAiB2B,MAAjB,GAA0B,WAAWF,OAArC;;sBAHO;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA;cAAA,CAAD,IAIP,GAJO,CAAV;cAMAF,UAAU,0EAAC;gBAAA;gBAAA;kBAAA;oBAAA;sBAAA;wBAAA;wBAAA,OACeC,cAAc,EAD7B;;sBAAA;wBACDI,OADC;wBAEPhC,EAAE,CAAC8B,GAAH,CAAOE,OAAP;wBACA,KAAI,CAAC5B,WAAL,CAAiB2B,MAAjB,IAA2B,aAAaC,OAAxC;;sBAHO;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA;cAAA,CAAD,IAIP,IAJO,CAAV;;YAT2B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAc1B;AAnDI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n    outputLabel: cc.Label,\n    },\n\n    start() {\n    this.testCircuitBreaker();\n    },\n\n    async getServerTime() {\n    try {\n        const response = await fetch(window.location.href.toString(), { method: 'HEAD' });\n        const dateHeader = response.headers.get('Date');\n        if (!dateHeader) throw new Error('No Date header');\n        return new Date(dateHeader).getTime();\n    } catch (e) {\n        return Date.now(); // fallback\n    }\n    },\n\n    async circuitBreaker(fn, timeThreshold) {\n    let isOpen = true;\n    setTimeout(() => {\n        isOpen = false;\n    }, timeThreshold);\n\n    return async (...args) => {\n        if (isOpen) {\n        return await fn(...args);\n        } else {\n        return \"service closed\";\n        }\n    };\n    },\n\n    async testCircuitBreaker() {\n    const getTimeLimited = await this.circuitBreaker(this.getServerTime, 2000);\n\n    setTimeout(async () => {\n        const result1 = await getTimeLimited();\n        cc.log(result1);\n        this.outputLabel.string = 'KQ 1: ' + result1;\n    }, 300);\n\n    setTimeout(async () => {\n        const result2 = await getTimeLimited();\n        cc.log(result2);\n        this.outputLabel.string += '\\nKQ 2: ' + result2;\n    }, 2100);\n    }\n\n});\n"]}