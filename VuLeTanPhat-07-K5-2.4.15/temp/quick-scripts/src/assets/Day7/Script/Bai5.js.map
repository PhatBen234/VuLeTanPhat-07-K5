{"version":3,"sources":["assets/Day7/Script/Bai5.js"],"names":["cc","Class","Component","properties","timeLabel","Label","start","logLatency","getServerTime","fetch","window","location","href","toString","method","headers","response","dateHeader","get","Error","log","Date","getTime","error","now","startTime","string","i","currentTime","latency","Promise","resolve","setTimeout"],"mappings":";;;;;;+CACA;;;;;;AADAA,EAAE,CAACC,KAAH,CAAS;EACP,WAASD,EAAE,CAACE,SADL;EAEPC,UAAU,EAAE;IACVC,SAAS,EAAEJ,EAAE,CAACK,KADJ,CACY;;EADZ,CAFL;EAMPC,KANO,mBAMC;IACN,KAAKC,UAAL;EACD,CARM;EAUDC,aAVC,2BAUe;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEKC,KAAK,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,EAAD,EAAkC;gBAC5DC,MAAM,EAAE,MADoD;gBAE5DC,OAAO,EAAE;kBACP,gBAAgB;gBADT;cAFmD,CAAlC,CAFV;;YAAA;cAEZC,QAFY;cASZC,UATY,GASCD,QAAQ,CAACD,OAAT,CAAiBG,GAAjB,CAAqB,MAArB,CATD;;cAAA,IAWbD,UAXa;gBAAA;gBAAA;cAAA;;cAAA,MAYV,IAAIE,KAAJ,CAAU,yCAAV,CAZU;;YAAA;cAelBnB,EAAE,CAACoB,GAAH,CAAO,4BAA4BH,UAAnC,EAfkB,CAe8B;;cAf9B,iCAgBX,IAAII,IAAJ,CAASJ,UAAT,EAAqBK,OAArB,EAhBW;;YAAA;cAAA;cAAA;cAkBlBtB,EAAE,CAACuB,KAAH,CAAS,kCAAT;cAlBkB,iCAmBXF,IAAI,CAACG,GAAL,EAnBW;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAqBrB,CA/BM;EAiCDjB,UAjCC,wBAiCY;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACK,KAAI,CAACC,aAAL,EADL;;YAAA;cACbiB,SADa;cAEjBzB,EAAE,CAACoB,GAAH,CAAO,wBAAwBK,SAA/B;cACA,KAAI,CAACrB,SAAL,CAAesB,MAAf,+CAA8CD,SAA9C,CAHiB,CAG0C;;cAElDE,CALQ,GAKJ,CALI;;YAAA;cAAA,MAKDA,CAAC,GAAG,EALH;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAMW,KAAI,CAACnB,aAAL,EANX;;YAAA;cAMToB,WANS;cAOTC,OAPS,GAOCD,WAAW,GAAGH,SAPf;cAQfzB,EAAE,CAACoB,GAAH,CAAO,yBAAyBQ,WAAhC;cACA5B,EAAE,CAACoB,GAAH,6BAAkBS,OAAlB,SATe,CAWf;;cACA,KAAI,CAACzB,SAAL,CAAesB,MAAf,2CAA+CE,WAA/C,iCAAuEC,OAAvE;cAEAJ,SAAS,GAAGG,WAAZ,CAde,CAgBf;;cAhBe;cAAA,OAiBT,IAAIE,OAAJ,CAAY,UAAAC,OAAO;gBAAA,OAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;cAAA,CAAnB,CAjBS;;YAAA;cAKOJ,CAAC,EALR;cAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAmBlB;AApDM,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n  extends: cc.Component,\n  properties: {\n    timeLabel: cc.Label,  // Kết nối Label với thuộc tính trong Cocos Creator\n  },\n\n  start() {\n    this.logLatency();\n  },\n\n  async getServerTime() {\n    try {\n      const response = await fetch(window.location.href.toString(), {\n        method: 'HEAD',\n        headers: {\n          'Content-Type': 'text/html'\n        }\n      });\n\n      const dateHeader = response.headers.get('Date');\n\n      if (!dateHeader) {\n        throw new Error('Không thể lấy header \"Date\" từ response');\n      }\n\n      cc.log('Header Date từ server: ' + dateHeader); // Log giá trị Date từ server\n      return new Date(dateHeader).getTime();\n    } catch (error) {\n      cc.error('Lỗi khi lấy thời gian từ server:', error);\n      return Date.now(); // fallback nếu lỗi\n    }\n  },\n\n  async logLatency() {\n    let startTime = await this.getServerTime();\n    cc.log('Thời gian bắt đầu: ' + startTime);\n    this.timeLabel.string = `Thời gian bắt đầu: ${startTime}`; // Hiển thị thời gian bắt đầu lên Label\n\n    for (let i = 0; i < 10; i++) {\n      const currentTime = await this.getServerTime();\n      const latency = currentTime - startTime;\n      cc.log('Thời gian hiện tại: ' + currentTime);\n      cc.log(`Độ trễ: ${latency}ms`);\n\n      // Hiển thị kết quả mỗi lần vào Label\n      this.timeLabel.string = `Thời gian hiện tại: ${currentTime}\\nĐộ trễ: ${latency}ms`;\n\n      startTime = currentTime;\n\n      // Delay 1 giây giữa các lần gọi để giá trị thay đổi rõ rệt\n      await new Promise(resolve => setTimeout(resolve, 1000)); // 1 giây\n    }\n  }\n});\n"]}