{"version":3,"sources":["assets/Day6/Script/Bai2.js"],"names":["cc","Class","Component","properties","timeLabel","Label","start","fetchWithAutoRetry","simulateAPICall","Promise","resolve","reject","Math","random","Error","fetcher","maximumRetryCount","attempt","result","log","string","message","setTimeout"],"mappings":";;;;;;+CACA;;;;;;AADAA,EAAE,CAACC,KAAH,CAAS;EACP,WAASD,EAAE,CAACE,SADL;EAGPC,UAAU,EAAE;IACVC,SAAS,EAAEJ,EAAE,CAACK;EADJ,CAHL;EAOPC,KAPO,mBAOC;IACN,KAAKC,kBAAL,CAAwB,KAAKC,eAA7B,EAA8C,CAA9C,EADM,CAC6C;EACpD,CATM;EAWP;EACAA,eAZO,6BAYW;IAChB,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;MACtC;MACA,IAAIC,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;QACvBF,MAAM,CAAC,IAAIG,KAAJ,CAAU,iBAAV,CAAD,CAAN;MACD,CAFD,MAEO;QACLJ,OAAO,CAAC,oBAAD,CAAP;MACD;IACF,CAPM,CAAP;EAQD,CArBM;EAuBP;EACMH,kBAxBC,8BAwBkBQ,OAxBlB,EAwB2BC,iBAxB3B,EAwBkD;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,IAAvBA,iBAAuB;gBAAvBA,iBAAuB,GAAH,CAAG;cAAA;;cAAE;cACrDC,OADmD,GACzC,CADyC;;YAAA;cAAA,MAEhDA,OAAO,GAAGD,iBAFsC;gBAAA;gBAAA;cAAA;;cAAA;cAAA;cAAA,OAI9BD,OAAO,EAJuB;;YAAA;cAI7CG,MAJ6C;cAIlB;cACjClB,EAAE,CAACmB,GAAH,CAAO,UAAP,EAAmBD,MAAnB,EALmD,CAKtB;;cAC7B,KAAI,CAACd,SAAL,CAAegB,MAAf,GAAwBF,MAAxB,CANmD,CAMlB;;cANkB,iCAO5CA,MAP4C;;YAAA;cAAA;cAAA;cASnDD,OAAO,GAT4C,CASvC;;cACZjB,EAAE,CAACmB,GAAH,cAAkBF,OAAlB,eAAqC,YAAMI,OAA3C,EAVmD,CAUG;;cAVH,MAW/CJ,OAAO,IAAID,iBAXoC;gBAAA;gBAAA;cAAA;;cAYjDhB,EAAE,CAACmB,GAAH,CAAO,oBAAP,EAZiD,CAYlB;;cAC/B,KAAI,CAACf,SAAL,CAAegB,MAAf,GAAwB,oBAAxB,CAbiD,CAaF;;cAbE,MAc3C,IAAIN,KAAJ,CAAU,oBAAV,CAd2C;;YAAA;cAgBnDd,EAAE,CAACmB,GAAH,mBAAuBF,OAAvB,SAAkCD,iBAAlC,QAhBmD,CAgBO;cAC1D;;cAjBmD;cAAA,OAkB7C,IAAIP,OAAJ,CAAY,UAAAC,OAAO;gBAAA,OAAIY,UAAU,CAACZ,OAAD,EAAU,IAAV,CAAd;cAAA,CAAnB,CAlB6C;;YAAA;cAAA;cAAA;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAqBxD;AA7CM,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    timeLabel: cc.Label,  \n  },\n\n  start() {\n    this.fetchWithAutoRetry(this.simulateAPICall, 3);  // Gọi hàm retry với 3 lần thử lại\n  },\n\n  // Hàm thực hiện API Call giả lập\n  simulateAPICall() {\n    return new Promise((resolve, reject) => {\n      // Giả lập 50% khả năng thất bại\n      if (Math.random() < 0.5) {\n        reject(new Error('API call failed'));\n      } else {\n        resolve('API call succeeded');\n      }\n    });\n  },\n\n  // Hàm retry request\n  async fetchWithAutoRetry(fetcher, maximumRetryCount = 5) { // truyen so lan retry mac dinh la 5, no se chay 5 neu o tren ngta quen truyen vao\n    let attempt = 0;\n    while (attempt < maximumRetryCount) {\n      try {\n        const result = await fetcher();  // Thực hiện gọi API\n        cc.log('Success:', result);  // Log thành công\n        this.timeLabel.string = result;  // Hiển thị kết quả lên label\n        return result;  // Nếu thành công, trả về kết quả\n      } catch (error) {\n        attempt++;  // Tăng số lần thử lại\n        cc.log(`Attempt ${attempt} failed:`, error.message);  // Log lỗi\n        if (attempt >= maximumRetryCount) {\n          cc.log('All retries failed');  // Khi vượt quá số lần thử lại\n          this.timeLabel.string = 'All retries failed';  // Hiển thị thông báo lên label\n          throw new Error('All retries failed');\n        }\n        cc.log(`Retrying... (${attempt}/${maximumRetryCount})`);  // Log retry\n        // Delay giữa các lần thử lại\n        await new Promise(resolve => setTimeout(resolve, 1000));  // 1 giây\n      }\n    }\n  }\n});\n"]}